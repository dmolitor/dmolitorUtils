[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 dmolitorUtils authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Daniel Molitor. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Molitor D (2021). dmolitorUtils: Personal Utility Functions. R package version 0.0.0.9003.","code":"@Manual{,   title = {dmolitorUtils: Personal Utility Functions},   author = {Daniel Molitor},   year = {2021},   note = {R package version 0.0.0.9003}, }"},{"path":"/index.html","id":"dmolitorutils","dir":"","previous_headings":"","what":"Personal Utility Functions","title":"Personal Utility Functions","text":"collection utility functions.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Personal Utility Functions","text":"Get development version github :","code":"devtools::install_github(\"dmolitor/dmolitorUtils\")"},{"path":"/reference/dmolitorUtils-package.html","id":null,"dir":"Reference","previous_headings":"","what":"dmolitorUtils: Personal Utility Functions — dmolitorUtils-package","title":"dmolitorUtils: Personal Utility Functions — dmolitorUtils-package","text":"variety utility functions use consistently.","code":""},{"path":"/reference/dmolitorUtils-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"dmolitorUtils: Personal Utility Functions — dmolitorUtils-package","text":"Maintainer: Daniel Molitor molitdj97@gmail.com","code":""},{"path":"/reference/model_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Model Metrics — model_metrics","title":"Calculate Model Metrics — model_metrics","text":"Calculates variety standard model metrics, given truth predicted values vectors.","code":""},{"path":"/reference/model_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Model Metrics — model_metrics","text":"","code":"model_metrics(truth, predicted, categorical = FALSE)"},{"path":"/reference/model_metrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Model Metrics — model_metrics","text":"truth vector - true outcome values. predicted vector - predicted outcome values. categorical logical - true outcome categorical response variable? function handles binary case truth factor levels 0 1.","code":""},{"path":"/reference/model_metrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Model Metrics — model_metrics","text":"tibble calculated model metrics","code":""},{"path":"/reference/model_metrics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Model Metrics — model_metrics","text":"","code":"# Continuous outcome mtcarslm <- lm(mpg ~ ., mtcars) model_metrics(mtcars$mpg, mtcarslm$fitted.values) #> # A tibble: 3 × 3 #>   .metric .estimator .estimate #>   <chr>   <chr>          <dbl> #> 1 rmse    standard       2.15  #> 2 rsq     standard       0.869 #> 3 mae     standard       1.72   # Binary outcome iris$isSetosa <- factor(as.integer(iris$Species == \"setosa\")) irisglm <- glm(isSetosa ~ Sepal.Length, iris, family = \"binomial\") model_metrics(iris$isSetosa, irisglm$fitted.values, TRUE) #> # A tibble: 4 × 3 #>   .metric     .estimator .estimate #>   <chr>       <chr>          <dbl> #> 1 accuracy    binary         0.893 #> 2 kap         binary         0.755 #> 3 mn_log_loss binary         0.239 #> 4 roc_auc     binary         0.959"},{"path":"/reference/na_ref.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Factor with NA as Reference — na_ref","title":"Create Factor with NA as Reference — na_ref","text":"Function sets NA factor reference level (NAs exist).","code":""},{"path":"/reference/na_ref.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Factor with NA as Reference — na_ref","text":"","code":"na_ref(var, ...)"},{"path":"/reference/na_ref.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Factor with NA as Reference — na_ref","text":"var Vector convert factor ... Additional arguments pass factor().","code":""},{"path":"/reference/na_ref.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Factor with NA as Reference — na_ref","text":"var factor NA reference level (exist).","code":""},{"path":"/reference/na_ref.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Factor with NA as Reference — na_ref","text":"","code":"no_na <- na_ref(1:10) with_na <- na_ref(c(NA, 1:10))  levels(no_na) #>  [1] \"1\"  \"2\"  \"3\"  \"4\"  \"5\"  \"6\"  \"7\"  \"8\"  \"9\"  \"10\" levels(with_na) #>  [1] NA   \"1\"  \"2\"  \"3\"  \"4\"  \"5\"  \"6\"  \"7\"  \"8\"  \"9\"  \"10\""},{"path":"/reference/repl_python_virtualenv.html","id":null,"dir":"Reference","previous_headings":"","what":"Open Python REPL in virtual environment — repl_python_virtualenv","title":"Open Python REPL in virtual environment — repl_python_virtualenv","text":"repl_python_virtualenv Activates Python virtual environment launches Python REPL within environment.","code":""},{"path":"/reference/repl_python_virtualenv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open Python REPL in virtual environment — repl_python_virtualenv","text":"","code":"repl_python_virtualenv(envdir)"},{"path":"/reference/repl_python_virtualenv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open Python REPL in virtual environment — repl_python_virtualenv","text":"envdir virtual environment directory.","code":""},{"path":"/reference/repl_python_virtualenv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Open Python REPL in virtual environment — repl_python_virtualenv","text":"NULL. Called side effects.","code":""},{"path":"/reference/repl_python_virtualenv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Open Python REPL in virtual environment — repl_python_virtualenv","text":"","code":"if (FALSE) {   repl_python_virtualenv(\"~/.venv/foo-bar/\") }"},{"path":"/reference/rmd_skeleton.html","id":null,"dir":"Reference","previous_headings":"","what":"RMarkdown Skeleton — rmd_skeleton","title":"RMarkdown Skeleton — rmd_skeleton","text":"function creates RMarkdown skeleton pretty defaults.","code":""},{"path":"/reference/rmd_skeleton.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RMarkdown Skeleton — rmd_skeleton","text":"","code":"rmd_skeleton(   name = \"Untitled\",   dir = here(),   title = NULL,   author = \"Daniel Molitor\",   abstract = FALSE )"},{"path":"/reference/rmd_skeleton.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RMarkdown Skeleton — rmd_skeleton","text":"name string - name RMarkdown document. dir target directory. title title RMarkdown document. Optional argument. author author RMarkdown document. Optional argument. abstract logical value - whether include Abstract section.","code":""},{"path":"/reference/rmd_skeleton.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"RMarkdown Skeleton — rmd_skeleton","text":"Returns file path invisibly. called side effects.","code":""},{"path":"/reference/rmd_skeleton.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"RMarkdown Skeleton — rmd_skeleton","text":"","code":"target_dir <- tempdir() rmd_skeleton(name = \"test\",              dir = target_dir,              title = \"Test Document\")"},{"path":"/reference/sort_factor.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Sorted Factor — sort_factor","title":"Create Sorted Factor — sort_factor","text":"Set factor sorted ascending unique values levels. Also allows user explicitly set reference level.","code":""},{"path":"/reference/sort_factor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Sorted Factor — sort_factor","text":"","code":"sort_factor(var, base.level = NULL, ...)"},{"path":"/reference/sort_factor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Sorted Factor — sort_factor","text":"var Vector convert factor. base.level Reference level character string. Optional argument. ... Additional arguments pass factor()","code":""},{"path":"/reference/sort_factor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Sorted Factor — sort_factor","text":"factor levels ascending order potential user-defined reference level.","code":""},{"path":"/reference/sort_factor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Sorted Factor — sort_factor","text":"","code":"no_ref <- sort_factor(c(\"e\", \"f\", \"z\", \"d\", \"a\")) with_ref <- sort_factor(c(\"e\", \"f\", \"z\", \"d\", \"a\"), base.level = \"z\")  levels(no_ref) #> [1] \"a\" \"d\" \"e\" \"f\" \"z\" levels(with_ref) #> [1] \"z\" \"a\" \"d\" \"e\" \"f\""},{"path":"/reference/threeway_formula.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a threeway formula into distinct sub-formulas — threeway_formula","title":"Convert a threeway formula into distinct sub-formulas — threeway_formula","text":"threeway formula one form ~ b ~ c implies following distinct sub-formulas: ~ b ~ c. function splits threeway formula distinct sub-formulas.","code":""},{"path":"/reference/threeway_formula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a threeway formula into distinct sub-formulas — threeway_formula","text":"","code":"threeway_formula(form, drop.lhs = TRUE)"},{"path":"/reference/threeway_formula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a threeway formula into distinct sub-formulas — threeway_formula","text":"form formula string coercible one. drop.lhs logical indicating whether drop respective LHS variables partner sub-formulas.","code":""},{"path":"/reference/threeway_formula.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a threeway formula into distinct sub-formulas — threeway_formula","text":"list length 2, components sub-formulas provided threeway formula.","code":""},{"path":"/reference/threeway_formula.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a threeway formula into distinct sub-formulas — threeway_formula","text":"","code":"threeway_formula(z ~ y ~ w + w:x) #> [[1]] #> z ~ w + w:x - y #>  #> [[2]] #> y ~ w + w:x - z #>  threeway_formula(\"z ~ y ~ w + w:x\") #> [[1]] #> z ~ w + w:x - y #>  #> [[2]] #> y ~ w + w:x - z #>  threeway_formula(mpg ~ carb ~ . - wt + gear:carb) #> [[1]] #> mpg ~ . - wt + gear:carb - carb #>  #> [[2]] #> carb ~ . - wt + gear:carb - mpg #>  threeway_formula(mpg ~ carb ~ . - wt + gear:carb, drop.lhs = FALSE) #> [[1]] #> mpg ~ . - wt + gear:carb #>  #> [[2]] #> carb ~ . - wt + gear:carb #>"},{"path":"/reference/virtualenv_create_win.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Python virtual environment — virtualenv_create_win","title":"Create Python virtual environment — virtualenv_create_win","text":"virtualenv_create_win creates new Python virtual environment installs updated versions pip, setuptools, wheel addition user-provided packages available PyPI.","code":""},{"path":"/reference/virtualenv_create_win.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Python virtual environment — virtualenv_create_win","text":"","code":"virtualenv_create_win(envdir, envname, packages = NULL)"},{"path":"/reference/virtualenv_create_win.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Python virtual environment — virtualenv_create_win","text":"envdir Directory create virtual environment within. envname Name new virtual environment. packages Additional python packages install. NULL, pip, setuptools, wheel installed default.","code":""},{"path":"/reference/virtualenv_create_win.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Python virtual environment — virtualenv_create_win","text":"NULL. Called side effects.","code":""},{"path":"/reference/virtualenv_create_win.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Python virtual environment — virtualenv_create_win","text":"","code":"if (FALSE) {   virtualenv_create_win(\"~/.venv/\", \"foo-bar\", c(\"numpy\", \"pandas\")) }"},{"path":"/reference/win_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Translate filepaths to Windows style — win_dir","title":"Translate filepaths to Windows style — win_dir","text":"Filepaths Windows OS typically use \\ separator. function strips forward slashes replaces back slashes.","code":""},{"path":"/reference/win_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translate filepaths to Windows style — win_dir","text":"","code":"win_dir(path, check.exists = FALSE)"},{"path":"/reference/win_dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translate filepaths to Windows style — win_dir","text":"path Directory path. check.exists logical (NA); check directory exists.","code":""},{"path":"/reference/win_dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Translate filepaths to Windows style — win_dir","text":"Directory path Windows format.","code":""},{"path":"/reference/win_dir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Translate filepaths to Windows style — win_dir","text":"","code":"target_dir <- gsub(\"\\\\\\\\\", \"/\", tempdir())  # Convert directory path win_dir(target_dir) #> [1] \"\\\\tmp\\\\RtmpKVLR24\" # Convert and check for directory existence win_dir(target_dir, TRUE) #> [1] \"\\\\tmp\\\\RtmpKVLR24\""}]
